
#!/bin/bash

# this just runs the four timed tests

  #
  runtest () {
    # comment out line below once reference files have been generated
     # $1 | grep ^@ > $2.ref

    echo
    echo ">>> START TEST >>>>"

    $1 | grep ^@ > $2.out
    diff $2.out $2.ref > $2.diff
    diff=`wc -c < $2.diff`
    let score=0
    if [ $diff = 0 ]; then
       let "score = $3"
    fi
    let "max = $max + $3"
    let "total = $total + $score"

    echo "test $2 ; cmd: $1 ; score:  $score / $3"
  }

  runtest_sort () {
    # comment out line below once reference files have been generated

    # $1 | grep ^@ | sort > $2.ref

    echo
    echo ">>> START TEST >>>>"

    $1 | grep ^@ | sort > $2.out
    diff $2.out $2.ref > $2.diff
    diff=`wc -c < $2.diff`
    let score=0
    if [ $diff = 0 ]; then
       let "score = $3"
    fi
    let "max = $max + $3"
    let "total = $total + $score"

    echo "test $2 ; cmd: $1 ; score:  $score / $3"
  }

  timetest () {
    # comment out line below once reference files have been generated
    
     # /usr/bin/time -p  $1  | grep ^@ > $2.ref

    echo
    echo "!>>> START TEST >>>>"

     /usr/bin/time -p  $1   | grep ^@ > $2.out   

    diff $2.out $2.ref > $2.diff
    diff=`wc -c < $2.diff`
    let score=0
    if [ $diff = 0 ]; then
       echo "!FUNCTIONAL TEST:  PASSED"
    else
       echo "!FUNCTIONAL TEST:  FAILED"
    fi
    let "max = $max + $3"
    echo "!USER TIME ABOVE MUST ALSO BE < 0.1 SECONDS TO PASS"

    echo "! test $2 ; cmd: $1 ; score:  _______ / $3"
  }

  make clean
  make

  let total=0
  let max=0

  timetest "./cpaths_basic ladder20.g" "crit-paths5" 5
  timetest "./cpaths_basic chain30.g" "crit-paths6" 5
  timetest "./npaths ladder20.g" "num-paths3" 5
  timetest "./npaths chain30.g" "num-paths4" 5


  echo
  echo PARTIAL SCORE:  $total "/" $max


  

