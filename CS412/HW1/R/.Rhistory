midtermDist <- ggplot(subgrades,aes(midterm))
midtermDist
ggplot(subgrades,aes(midterm)) + geom_density()
subgrades <- subgrades[1:]
subgrades <- subgrades[1:-1]
subgrades <- subgrades[1:.M]
subgrades <- subgrades[1:.N]
subgrades[1:.N]
subgrades[1:]
subgrades <- subgrades[1:
]
subgrades <- subgrades[1:90]
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades <- subgrades[1:90]
subgrades[1:90]
subgrades <- subgrades[1,]
subgrades
subgrades <- subgrades[2:]
subgrades <- subgrades[,2:]
subgrades <- subgrades[,2:90]
subgrades <- subgrades[,2:89]
install.packages("dplyr")
midtermDist <- ggplot(subgrades)+
geom_density(aes(midterm))+
geom_density(aes(oq))
midtermDist
ggplot(subgrades,aes(x=value))+
geom_density(aes(midterm))+
geom_density(aes(oq))
ggplot(subgrades,aes(x=midterm))+
geom_density(aes(midterm))+
geom_density(aes(oq))
ggplot(subgrades,aes(x=midterm))+
geom_density(aes(midterm))
gplot(subgrades,aes(x=midterm))+
geom_density()
ggplot(subgrades,aes(x=midterm))+
geom_density()+
0
geom_blank()
ggplot(subgrades,aes(x=midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()+
geom_density(aes(x=oq))
ggplot(subgrades,aes(midterm))+
geom_density()
library(dplyr)
subgrades[2:]
subgrades[,2:]
subgrades(,2:)
subgrades(,2:90)
subgrades[],2:90]
subgrades[,2:90]
subgrades[c(1,2,3,4),2:90]
test <- lm(midterm~oq+homework+oq*homework,subgrades)
summary(test)
summary(subgrades)
source('~/.active-rstudio-document', echo=TRUE)
subgrades <- filter(subgrades,midterm>40)
summary(subgrades)
subgrades <- filter(subgrades,midterm>30)
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades <- filter(subgrades,midterm>30)
summary(subgrades)
test <- lm(midterm~oq+homework+oq*homework,subgrades)
summary(test)
test <- lm(midterm~oq+homework,subgrades)
summary(test)
ggplot(subgrades,aes(midterm))+
geom_density()    +
geom_density(aes(x=oq))
gplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
summary(subgrades)
ggplot(subgrades,aes(midterm))+
geom_density()    +
geom_boxplot()
ggplot(subgrades,aes(midterm))+
geom_density()    +
geom_boxplot(aes(midterm))
ggplot(subgrades,aes(midterm))+
geom_density()    +
geom_boxplot(aes(x=midterm,y=.5))
ggplot(subgrades,aes(midterm))+
geom_density()
library(ggplot2)
library(lme4)
library(dplyr)
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades <- filter(subgrades,midterm>30)
summary(subgrades)
test <- lm(midterm~oq+homework,subgrades)
summary(test)
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density() +
geom_step(aes(y=..y..),stat="ecdf")
ggplot(subgrades,aes(midterm))+
geom_density() +
#geom_step(aes(y=..y..),stat="ecdf")
geom_histogram(bins=20)
ggplot(subgrades,aes(midterm))+
geom_density() +
#geom_step(aes(y=..y..),stat="ecdf")
geom_histogram(binwidth=2)
ggplot(subgrades,aes(midterm))+
geom_density()
ggplot(subgrades,aes(midterm))+
geom_density() +
geom_step(aes(y=..y..),stat="ecdf")
ggplot(subgrades,aes(midterm))+
geom_density() +
geom_step(aes(y=0.03*(..y..)),stat="ecdf")
ggplot(subgrades,aes(midterm))+
geom_density()
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density() +
geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density() #+
#geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
subgrades <- filter(subgrades,midterm>10)
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density() #+
#geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
summary(subgrades)
names(subgrades)
names(grades)
subgrades["final"] <- grades["Unposted.Final.Score"]
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades["final"] <- grades["Unposted.Final.Score"]
subgrades <- filter(subgrades,midterm>10)
summary(subgrades)
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density() +
geom_density(aes(final))
midtermDist
ggplot(subgrades,aes(midterm))+
geom_density() +
geom_density(aes(final,color='red'))
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density(fill='green',alpha=.5) +
geom_density(aes(final,color='red',alpha=.5))
midtermDist
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density(fill='green',alpha=.5) +
geom_density(aes(final,fill='red',alpha=.5))
#geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
summary(subgrades["final"])
summary(subgrades)
subgrades
subgrades[order(oq)]
subgrades[order("oq")]
subgrades[order("oq"),]
subgrades[order(subgrades$oq),]
subgrades[order(subgrades$midterm),]
test <- lm(midterm~oq+homework,subgrades)
summary(test)
test <- lm(final~midterm+oq+homework,subgrades)
summary(test)
subgrades["readjusted"] <- grades$Homework.Unposted.Current.Score*.03+grades$Online.Quizzes.Unposted.Final.Score*0.3+grades$Midterm.Unposted.Final.Score*.6
grades <- data.frame(read.csv("./Desktop/grades.csv"))
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades["final"] <- grades["Unposted.Final.Score"]
subgrades["readjusted"] <- grades$Homework.Unposted.Current.Score*.03+grades$Online.Quizzes.Unposted.Final.Score*0.3+grades$Midterm.Unposted.Final.Score*.6
subgrades <- filter(subgrades,midterm>10)
summary(subgrades)
test <- lm(readjusted~midterm+oq+homework,subgrades)
summary(test)
summary(grades)
summary(subgrades)
summary(test)
subgrades["readjusted"] <- grades$Homework.Unposted.Current.Score*.3+grades$Online.Quizzes.Unposted.Final.Score*0.1+grades$Midterm.Unposted.Final.Score*.6
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades["final"] <- grades["Unposted.Final.Score"]
subgrades["readjusted"] <- grades$Homework.Unposted.Current.Score*.3+grades$Online.Quizzes.Unposted.Final.Score*0.1+grades$Midterm.Unposted.Final.Score*.6
subgrades <- filter(subgrades,midterm>10)
summary(subgrades)
test <- lm(readjusted~midterm+oq+homework,subgrades)
summary(test)
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades["final"] <- grades["Unposted.Final.Score"]
subgrades["readjusted"] <- grades$Homework.Unposted.Current.Score*.3+grades$Online.Quizzes.Unposted.Final.Score*0.1+grades$Midterm.Unposted.Final.Score*.6
subgrades <- filter(subgrades,midterm>10)
test <- lm(readjusted~midterm+oq+homework,subgrades)
summary(test)
subgrades["readjusted"] <- (grades$Homework.Unposted.Current.Score*.3)+(grades$Online.Quizzes.Unposted.Final.Score*0.1)+(grades$Midterm.Unposted.Final.Score*.6)
subgrades <- data.frame(grades["Student"])
subgrades["midterm"] <- grades["Midterm.Unposted.Final.Score"]
subgrades["oq"] <- grades["Online.Quizzes.Final.Score"]
subgrades["homework"] <- grades["Homework.Final.Score"]
subgrades["final"] <- grades["Unposted.Final.Score"]
subgrades["readjusted"] <- (grades$Homework.Unposted.Current.Score*.3)+(grades$Online.Quizzes.Unposted.Final.Score*0.1)+(grades$Midterm.Unposted.Final.Score*.6)
test <- lm(readjusted~midterm+oq+homework,subgrades)
summary(test)
subgrades["readjusted"] <- (grades$Homework.Final.Score*.3)+(grades$Online.Quizzes.Unposted.Final.Score*0.1)+(grades$Midterm.Unposted.Final.Score*.6)
test <- lm(readjusted~midterm+oq+homework,subgrades)
summary(test)
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density(fill='green',alpha=.5) +
geom_density(aes(readjusted,fill='red',alpha=.5))
#geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
subgrades <- filter(subgrades,midterm>10)
midtermDist <- ggplot(subgrades,aes(midterm))+
geom_density(fill='green',alpha=.5) +
geom_density(aes(readjusted,fill='red',alpha=.5))
#geom_step(aes(y=0.03*(..y..)),stat="ecdf")
midtermDist
summary(subgrades)
summary(abs(subgrades$midterm-69))
summary(abs(subgrades$midterm-67.72))
summary(abs(subgrades$midterm-69))
summary(abs(subgrades$midterm-67.72))
x = range(60,80,.5)
x
x = range(.5,60,80)
x
x = seq(60,80,.5)
- ggplot(subgrades,aes(x,y=abs(subgrades$midterm-x)))+geom_bar()
ggplot(subgrades,aes(x,y=abs(subgrades$midterm-x)))+geom_bar()
deviationDist <- ggplot(subgrades,aes(x,y=median(abs(subgrades$midterm-x))))+geom_bar()
deviationDist
ggplot(x,aes(x,y=median(abs(subgrades$midterm-x))))+geom_bar()
ggplot(1,aes(x,y=median(abs(subgrades$midterm-x))))+geom_bar()
median(abs(subgrades$midterm-x)
)
x["median"] <- seq(60,80,.5)
x <- Null
x <- NA
x["median"] <- seq(60,80,.5)
x <- NULL
x["median"] <- seq(60,80,.5)
x <- seq(60,80,.5)
y["median"] <- x
y["median"] <- data.frame(x)
source('~/.active-rstudio-document', echo=TRUE)
y <- data.frame(x)
y
names(y)
for avg in y$x:
print(avg)
for (avg in y$x){
print(avg)
}
for (avg in y$x){
print(avg,abs(subgrades$midterm-avg)
}
for (avg in y$x){
print(avg,abs(subgrades$midterm-avg))
}
for (avg in y$x){
print(abs(subgrades$midterm-avg))
}
for (avg in y$x){
print(median(abs(subgrades$midterm-avg)))
}
for (avg in y$x){
print(avg)
print(median(abs(subgrades$midterm-avg)))
}
for (avg in y$x){
print(avg+": "+median(abs(subgrades$midterm-avg)))
}
for (avg in y$x){
print(toString(avg)+": "+toString(median(abs(subgrades$midterm-avg))))
}
for (avg in y$x){
print(paste(avg,": ",median(abs(subgrades$midterm-avg))))
}
#Installing packages ONLY RUN THIS ONCE!
install.packages("caret",dependencies=TRUE)
install.packages("e1071")
install.packages("dplyr")
install.packages("ggplot2")
#Linking the packages
library(caret)
library(e1071)
library(dplyr)
data = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
setwd("~/Box/CS412/19sp/homework/R")
data = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
data$X257 = NULL
data$Digit = as.factor(data$Digit)
data = filter(data,Digit==1|Digit==5)
index = createDataPartition(data$Digit, p = 0.7, list = F )
train = data[index,]
test = data[-index,]
index = createDataPartition(data$Digit, p = 0.3, list = F )
train = data[index,]
test = data[-index,]
graph <- ggplot(data,
aes(X1,X2))+# this sets the axes
geom_point(x,y,color=c("red","blue"))
graph <- ggplot(data,
aes(X1,X2))+# this sets the axes
geom_point(X1,X2,color=c("red","blue"))
#https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
graph <- ggplot(data,
aes(X1,X2))+# this sets the axes
geom_point(data$X1,data$X2,color=c("red","blue"))
graph <- ggplot(data,
aes(data$X1,data$X2))+# this sets the axes
geom_point(data$X1,data$X2,color=c("red","blue"))
#pick the first and second pixel and plot them
#https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
graph <- ggplot(data,
aes(data$X1,data$X2))+# this sets the axes
geom_point(color=c("red","blue"))
graph
count(data$X1)
summary(data)
graph <- ggplot(data,
aes(x=data$X72,data$X88))+# this sets the axes
geom_point(color=c("red","blue"))
graph
graph <- ggplot(train,
aes(x=train$X72,train$X88))+# this sets the axes
geom_point(color=c("red","blue"))
graph
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes
geom_point(color=c("red","blue"))
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes
geom_point()
graph
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes
geom_point(aes(color=Digit))
graph
graph <- ggplot(data,
aes(x=X72,X88))+# this sets the axes
geom_point(aes(color=Digit)) #this tells the plot to make a scatter plot and color them based on digit
graph #
set.seed(100)
index = createDataPartition(data$Digit, p = 0.5, list = F )
train = data[index,]
test = data[-index,]
#pick the first and second pixel and plot them
#https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes CHOOSE BETTER AXES THAN THIS
geom_point(aes(color=Digit)) #this tells the plot to make a scatter plot and color them based on digit
graph
model1 <- train(Digit~. , data = data, method = “knn”)
model1 <- train(Digit~. , data = data, method = "knn")
model1 <- train(Digit~. , data = train, method = "knn")
data = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
data$X257 = NULL
#selecting
data = filter(data,Digit==1|Digit==5)
#force R to treat 1,5 as categories, not numerics
data$Digit = as.factor(data$Digit)
#Partitioning the data
set.seed(100)
index = createDataPartition(data$Digit, p = 0.5, list = F )
train = data[index,]
test = data[-index,]
model1 <- train(Digit~. , data = train, method = "knn")
model1
plot(model1)
model2 <- train(Digit~X72+X88 , data = train, method = "knn") #modeling 1s and 5s for 256 dimensions
plot(model2)
model1 <- train(Digit~. , data = train, method = "knn",tunelength = 25) #modeling 1s and 5s for 256 dimensions
plot(model1)
confusionMatrix(model1, train$Digit )
set.seed(100)
index = createDataPartition(data$Digit, p = 0.2, list = F )
train = data[index,]
test = data[-index,]
model1 <- train(Digit~. , data = train, method = "knn",tunelength = 25) #modeling 1s and 5s for 256 dimensions
plot(model1)
trControl <- trainControl(method  = "cv",
number  = 5)
model1 <- train(Digit~. , data = train,
trControl = trControl,
method = "knn") #modeling 1s and 5s for 256 dimensions
plot(model1)
model2 <- train(Digit~X72+X88 ,
data = train,
method = "knn",
trControl = trControl) #modeling 1s and 5s for 256 dimensions
plot(model2)
model1 <- train(Digit~. ,
data = train,
trControl = trControl,
method = "knn",
tuneGrid   = expand.grid(k = 1:49)) #modeling 1s and 5s for 256 dimensions
plot(model1)
model2 <- train(Digit~X72+X88 ,
data = train,
method = "knn",
trControl = trControl,
tuneGrid   = expand.grid(k = 1:49))
plot(model2)
data1 = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
data = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
data$X257 = NULL
#selecting
data = filter(data,Digit==1|Digit==7)
#force R to treat 1,5 as categories, not numerics
data$Digit = as.factor(data$Digit)
#Partitioning the data
set.seed(100)
index = createDataPartition(data$Digit, p = 0.2, list = F )
train = data[index,]
test = data[-index,]
#pick the first and second pixel and plot them
#https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes CHOOSE BETTER AXES THAN THIS
geom_point(aes(color=Digit)) #this tells the plot to make a scatter plot and color them based on digit
graph #this will display the graph
#Set the level of cross-validation
trControl <- trainControl(method  = "cv",
number  = 10)
#this will build the model
model1 <- train(Digit~. ,
data = train,
trControl = trControl,
method = "knn",
tuneGrid   = expand.grid(k = 1:49)) #modeling 1s and 5s for 256 dimensions
plot(model1)
data = read.csv("data.csv",sep=" ",header=FALSE,col.names=append("Digit",seq(1,257,by=1)))
data$X257 = NULL
#selecting
data = filter(data,Digit==1|Digit==5)
#force R to treat 1,5 as categories, not numerics
data$Digit = as.factor(data$Digit)
#Partitioning the data
set.seed(100)
index = createDataPartition(data$Digit, p = 0.2, list = F )
train = data[index,]
test = data[-index,]
#pick the first and second pixel and plot them
#https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
graph <- ggplot(train,
aes(x=X72,X88))+# this sets the axes CHOOSE BETTER AXES THAN THIS
geom_point(aes(color=Digit)) #this tells the plot to make a scatter plot and color them based on digit
graph #this will display the graph
#Set the level of cross-validation
trControl <- trainControl(method  = "cv",
number  = 10)
#this will build the model
model1 <- train(Digit~. ,
data = train,
trControl = trControl,
method = "knn",
tuneGrid   = expand.grid(k = 1:49)) #modeling 1s and 5s for 256 dimensions
plot(model1)
model2 <- train(Digit~X72+X88 , #these are the predictive variables
data = train,
method = "knn",
trControl = trControl,
tuneGrid   = expand.grid(k = 1:49)) #modeling 1s and 5s for 256 dimensions
plot(model2)
library(ggplot2)
